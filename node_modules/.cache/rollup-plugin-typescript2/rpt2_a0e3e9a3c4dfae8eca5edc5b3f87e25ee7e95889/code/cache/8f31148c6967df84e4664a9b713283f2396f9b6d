{"code":"import { hasChanged, hasOwn, isArray, isInteger, isObject, isSymbol } from \"../shared/index\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { reactive } from \"./reactive\";\r\nfunction createGetter() {\r\n    return function get(target, key, receiver) {\r\n        var res = Reflect.get(target, key, receiver);\r\n        // 如果取得是symbol类型， 直接忽略它\r\n        if (isSymbol(res)) {\r\n            return res;\r\n        }\r\n        // 依赖收集\r\n        console.log('此时进行了数据获取操作');\r\n        debugger;\r\n        track(target, key);\r\n        // 取值的时候才递归\r\n        if (isObject(res)) {\r\n            return reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nfunction createSetter() {\r\n    return function set(target, key, value, receiver) {\r\n        // vue2不支持新增属性\r\n        // 那么这个时候怎么知道是新增还是修改呢\r\n        var oldValue = target[key]; // 如果是修改， 那么肯定是有老值的 \r\n        // 第一种是数组新增的逻辑， 第二种是对象的逻辑 \r\n        // 检查一下有没有这个属性\r\n        // 满足条件是数组并且修改了\r\n        var hasKey = isArray(target) && isInteger(key) ? Number(key) < target.length\r\n            :\r\n                // 如果是对象的话判断有没有属性\r\n                hasOwn(target, key);\r\n        var result = Reflect.set(target, key, value, receiver);\r\n        if (!hasKey) {\r\n            console.log('新增属性');\r\n            trigger(target, 'add', key, value);\r\n        }\r\n        else if (hasChanged(value, oldValue)) {\r\n            console.log('修改属性');\r\n            trigger(target, 'set', key, value, oldValue);\r\n        }\r\n        return result;\r\n    };\r\n}\r\nvar get = createGetter(); // 预置参数\r\nvar set = createSetter();\r\nexport var mutableHandlers = {\r\n    // 获取对象中的属性会执行此方法\r\n    get: get,\r\n    // 设置对象中的属性会执行此方法\r\n    set: set,\r\n};\r\n//# sourceMappingURL=baseHandler.js.map","references":["/Users/yueqi/Desktop/code/vue3-source/src/shared/index.ts","/Users/yueqi/Desktop/code/vue3-source/src/reactivity/effect.ts","/Users/yueqi/Desktop/code/vue3-source/src/reactivity/reactive.ts"],"map":"{\"version\":3,\"file\":\"baseHandler.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/reactivity/baseHandler.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC7F,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AAC1C,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAGtC,SAAS,YAAY;IACjB,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ;QACrC,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;QAE/C,uBAAuB;QACvB,IAAG,QAAQ,CAAC,GAAG,CAAC,EAAE;YACd,OAAO,GAAG,CAAA;SACb;QAED,OAAO;QACP,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;QAC1B,QAAQ,CAAA;QACR,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;QAClB,WAAW;QACX,IAAG,QAAQ,CAAC,GAAG,CAAC,EAAE;YACd,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAA;SACvB;QACD,OAAO,GAAG,CAAA;IACd,CAAC,CAAA;AACL,CAAC;AAED,SAAS,YAAY;IACjB,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ;QAC5C,cAAc;QAEd,qBAAqB;QACrB,IAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA,CAAC,oBAAoB;QAGjD,0BAA0B;QAE1B,cAAc;QACd,eAAe;QACf,IAAM,MAAM,GACR,OAAO,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM;YAC/D,CAAC;gBACD,iBAAiB;gBACjB,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CACtB;QAED,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAEzD,IAAG,CAAC,MAAM,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YACnB,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAA;SACrC;aAAK,IAAG,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAC;YACjC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YACnB,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;SAC/C;QAED,OAAO,MAAM,CAAA;IACjB,CAAC,CAAA;AACL,CAAC;AAED,IAAM,GAAG,GAAG,YAAY,EAAE,CAAC,CAAC,OAAO;AACnC,IAAM,GAAG,GAAG,YAAY,EAAE,CAAA;AAG1B,MAAM,CAAC,IAAM,eAAe,GAAG;IAC3B,iBAAiB;IACjB,GAAG,KAAA;IAEH,iBAAiB;IACjB,GAAG,KAAA;CACN,CAAA\"}"}
